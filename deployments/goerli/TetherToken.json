{
  "address": "0xBF8060c427Cbe90B039cbE3ffb900f5aF0d57166",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_upgradedAddress",
          "type": "address"
        }
      ],
      "name": "deprecate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "deprecated",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_evilUser",
          "type": "address"
        }
      ],
      "name": "addBlackList",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "upgradedAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maximumFee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_maker",
          "type": "address"
        }
      ],
      "name": "getBlackListStatus",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renouncePauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "who",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "who",
          "type": "address"
        }
      ],
      "name": "oldBalanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newBasisPoints",
          "type": "uint256"
        },
        {
          "name": "newMaxFee",
          "type": "uint256"
        }
      ],
      "name": "setParams",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "issue",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "basisPointsRate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isBlackListed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_clearedUser",
          "type": "address"
        }
      ],
      "name": "removeBlackList",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MAX_UINT",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_blackListedUser",
          "type": "address"
        }
      ],
      "name": "destroyBlackFunds",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_initialSupply",
          "type": "uint256"
        },
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_decimals",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_blackListedUser",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_balance",
          "type": "uint256"
        }
      ],
      "name": "DestroyedBlackFunds",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Issue",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Redeem",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "Deprecate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "AddedBlackList",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "RemovedBlackList",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "feeBasisPoints",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "maxFee",
          "type": "uint256"
        }
      ],
      "name": "Params",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event"
    }
  ],
  "transactionHash": "0x883615aa4cb69c114c9e288884f4a8bf097c46b5c3096c94e4a4009d3153f46e",
  "receipt": {
    "to": null,
    "from": "0xA09aB1aBeCb91CaC38c3240912D2A1b31e22F147",
    "contractAddress": "0xBF8060c427Cbe90B039cbE3ffb900f5aF0d57166",
    "transactionIndex": 1,
    "gasUsed": "1745583",
    "logsBloom": "0x
    "blockHash": "0x4c7a5aad94cbbdb96c8a0e38b394ee22c70aef6b9edbcf65273e4cf124e4d65d",
    "transactionHash": "0x883615aa4cb69c114c9e288884f4a8bf097c46b5c3096c94e4a4009d3153f46e",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 5203523,
        "transactionHash": "0x883615aa4cb69c114c9e288884f4a8bf097c46b5c3096c94e4a4009d3153f46e",
        "address": "0xBF8060c427Cbe90B039cbE3ffb900f5aF0d57166",
        "topics": [
          "0x6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f8",
          "0x000000000000000000000000a09ab1abecb91cac38c3240912d2a1b31e22f147"
        ],
        "data": "0x",
        "logIndex": 5,
        "blockHash": "0x4c7a5aad94cbbdb96c8a0e38b394ee22c70aef6b9edbcf65273e4cf124e4d65d"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 5203523,
        "transactionHash": "0x883615aa4cb69c114c9e288884f4a8bf097c46b5c3096c94e4a4009d3153f46e",
        "address": "0xBF8060c427Cbe90B039cbE3ffb900f5aF0d57166",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000a09ab1abecb91cac38c3240912d2a1b31e22f147"
        ],
        "data": "0x",
        "logIndex": 6,
        "blockHash": "0x4c7a5aad94cbbdb96c8a0e38b394ee22c70aef6b9edbcf65273e4cf124e4d65d"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 5203523,
        "transactionHash": "0x883615aa4cb69c114c9e288884f4a8bf097c46b5c3096c94e4a4009d3153f46e",
        "address": "0xBF8060c427Cbe90B039cbE3ffb900f5aF0d57166",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000a09ab1abecb91cac38c3240912d2a1b31e22f147"
        ],
        "data": "0x00000000000000000000000000000000000000000000003635c9adc5dea00000",
        "logIndex": 7,
        "blockHash": "0x4c7a5aad94cbbdb96c8a0e38b394ee22c70aef6b9edbcf65273e4cf124e4d65d"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 5203523,
        "transactionHash": "0x883615aa4cb69c114c9e288884f4a8bf097c46b5c3096c94e4a4009d3153f46e",
        "address": "0xBF8060c427Cbe90B039cbE3ffb900f5aF0d57166",
        "topics": [
          "0xcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a"
        ],
        "data": "0x00000000000000000000000000000000000000000000003635c9adc5dea00000",
        "logIndex": 8,
        "blockHash": "0x4c7a5aad94cbbdb96c8a0e38b394ee22c70aef6b9edbcf65273e4cf124e4d65d"
      }
    ],
    "blockNumber": 5203523,
    "cumulativeGasUsed": "2045412",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "1000000000000000000000",
    "Gold Tether",
    "XAUt",
    6
  ],
  "solcInputHash": "0c0864ebe317b9d36f575e99e1b01324",
  "metadata": "{\"compiler\":{\"version\":\"0.5.2+commit.1df8f40c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_upgradedAddress\",\"type\":\"address\"}],\"name\":\"deprecate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deprecated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_evilUser\",\"type\":\"address\"}],\"name\":\"addBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upgradedAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maximumFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_maker\",\"type\":\"address\"}],\"name\":\"getBlackListStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renouncePauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"oldBalanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBasisPoints\",\"type\":\"uint256\"},{\"name\":\"newMaxFee\",\"type\":\"uint256\"}],\"name\":\"setParams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basisPointsRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlackListed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_clearedUser\",\"type\":\"address\"}],\"name\":\"removeBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_UINT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blackListedUser\",\"type\":\"address\"}],\"name\":\"destroyBlackFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_initialSupply\",\"type\":\"uint256\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_blackListedUser\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"DestroyedBlackFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Issue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"Deprecate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"AddedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"RemovedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"feeBasisPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"maxFee\",\"type\":\"uint256\"}],\"name\":\"Params\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserRemoved\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender.\\r approve should be called when _allowed[msg.sender][spender] == 0. To decrement\\r allowed value is better to use this function to avoid 2 calls (and wait until\\r the first transaction is mined)\\r From MonolithDAO Token.sol\\r Emits an Approval event.\\r\",\"params\":{\"spender\":\"The address which will spend the funds.\\r\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\\r\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender.\\r approve should be called when _allowed[msg.sender][spender] == 0. To increment\\r allowed value is better to use this function to avoid 2 calls (and wait until\\r the first transaction is mined)\\r From MonolithDAO Token.sol\\r Emits an Approval event.\\r\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\\r\",\"spender\":\"The address which will spend the funds.\\r\"}},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\\r\"},\"owner()\":{\"return\":\"the address of the owner.\\r\"},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\\r\"},\"paused()\":{\"return\":\"true if the contract is paused, false otherwise.\\r\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\\r It will not be possible to call the functions with the `onlyOwner`\\r modifier anymore.\\r\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\\r\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\\r\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\\r\"}}},\"userdoc\":{\"methods\":{\"getBlackListStatus(address)\":{\"notice\":\"//// Getter to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\"},\"renounceOwnership()\":{\"notice\":\"Renouncing ownership will leave the contract without an owner,\\r thereby removing any functionality that is only available to the owner.\\r\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/Mocks/TetherToken.sol\":\"TetherToken\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Mocks/TetherToken.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\npragma solidity ^0.5.2;\\r\\n\\r\\n/*\\r\\n\\r\\n    2020 Tether Token - tether.to\\r\\n    Deployed by Will Harborne\\r\\n    \\r\\n*/\\r\\n\\r\\n/**\\r\\n * @title Roles\\r\\n * @dev Library for managing addresses assigned to a Role.\\r\\n */\\r\\nlibrary Roles {\\r\\n    struct Role {\\r\\n        mapping(address => bool) bearer;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev give an account access to this role\\r\\n     */\\r\\n    function add(Role storage role, address account) internal {\\r\\n        require(account != address(0));\\r\\n        require(!has(role, account));\\r\\n\\r\\n        role.bearer[account] = true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev remove an account's access to this role\\r\\n     */\\r\\n    function remove(Role storage role, address account) internal {\\r\\n        require(account != address(0));\\r\\n        require(has(role, account));\\r\\n\\r\\n        role.bearer[account] = false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev check if an account has this role\\r\\n     * @return bool\\r\\n     */\\r\\n    function has(Role storage role, address account)\\r\\n        internal\\r\\n        view\\r\\n        returns (bool)\\r\\n    {\\r\\n        require(account != address(0));\\r\\n        return role.bearer[account];\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract PauserRole {\\r\\n    using Roles for Roles.Role;\\r\\n\\r\\n    event PauserAdded(address indexed account);\\r\\n    event PauserRemoved(address indexed account);\\r\\n\\r\\n    Roles.Role private _pausers;\\r\\n\\r\\n    constructor() internal {\\r\\n        _addPauser(msg.sender);\\r\\n    }\\r\\n\\r\\n    modifier onlyPauser() {\\r\\n        require(isPauser(msg.sender));\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function isPauser(address account) public view returns (bool) {\\r\\n        return _pausers.has(account);\\r\\n    }\\r\\n\\r\\n    function addPauser(address account) public onlyPauser {\\r\\n        _addPauser(account);\\r\\n    }\\r\\n\\r\\n    function renouncePauser() public {\\r\\n        _removePauser(msg.sender);\\r\\n    }\\r\\n\\r\\n    function _addPauser(address account) internal {\\r\\n        _pausers.add(account);\\r\\n        emit PauserAdded(account);\\r\\n    }\\r\\n\\r\\n    function _removePauser(address account) internal {\\r\\n        _pausers.remove(account);\\r\\n        emit PauserRemoved(account);\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Pausable\\r\\n * @dev Base contract which allows children to implement an emergency stop mechanism.\\r\\n */\\r\\ncontract Pausable is PauserRole {\\r\\n    event Paused(address account);\\r\\n    event Unpaused(address account);\\r\\n\\r\\n    bool private _paused;\\r\\n\\r\\n    constructor() internal {\\r\\n        _paused = false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @return true if the contract is paused, false otherwise.\\r\\n     */\\r\\n    function paused() public view returns (bool) {\\r\\n        return _paused;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\r\\n     */\\r\\n    modifier whenNotPaused() {\\r\\n        require(!_paused);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Modifier to make a function callable only when the contract is paused.\\r\\n     */\\r\\n    modifier whenPaused() {\\r\\n        require(_paused);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev called by the owner to pause, triggers stopped state\\r\\n     */\\r\\n    function pause() public onlyPauser whenNotPaused {\\r\\n        _paused = true;\\r\\n        emit Paused(msg.sender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev called by the owner to unpause, returns to normal state\\r\\n     */\\r\\n    function unpause() public onlyPauser whenPaused {\\r\\n        _paused = false;\\r\\n        emit Unpaused(msg.sender);\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Ownable\\r\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\r\\n * functions, this simplifies the implementation of \\\"user permissions\\\".\\r\\n */\\r\\ncontract Ownable {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\r\\n     * account.\\r\\n     */\\r\\n    constructor() internal {\\r\\n        _owner = msg.sender;\\r\\n        emit OwnershipTransferred(address(0), _owner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @return the address of the owner.\\r\\n     */\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyOwner() {\\r\\n        require(isOwner());\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @return true if `msg.sender` is the owner of the contract.\\r\\n     */\\r\\n    function isOwner() public view returns (bool) {\\r\\n        return msg.sender == _owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Allows the current owner to relinquish control of the contract.\\r\\n     * It will not be possible to call the functions with the `onlyOwner`\\r\\n     * modifier anymore.\\r\\n     * @notice Renouncing ownership will leave the contract without an owner,\\r\\n     * thereby removing any functionality that is only available to the owner.\\r\\n     */\\r\\n    function renounceOwnership() public onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\\r\\n     * @param newOwner The address to transfer ownership to.\\r\\n     */\\r\\n    function transferOwnership(address newOwner) public onlyOwner {\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers control of the contract to a newOwner.\\r\\n     * @param newOwner The address to transfer ownership to.\\r\\n     */\\r\\n    function _transferOwnership(address newOwner) internal {\\r\\n        require(newOwner != address(0));\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title ERC20 interface\\r\\n * @dev see https://eips.ethereum.org/EIPS/eip-20\\r\\n */\\r\\ninterface IERC20 {\\r\\n    function transfer(address to, uint256 value) external returns (bool);\\r\\n\\r\\n    function approve(address spender, uint256 value) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool);\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address who) external view returns (uint256);\\r\\n\\r\\n    function allowance(address owner, address spender)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256);\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title SafeMath\\r\\n * @dev Unsigned math operations with safety checks that revert on error\\r\\n */\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n     * @dev Multiplies two unsigned integers, reverts on overflow.\\r\\n     */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n        // benefit is lost if 'b' is also tested.\\r\\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b);\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        // Solidity only automatically asserts when dividing by 0\\r\\n        require(b > 0);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        require(b <= a);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Adds two unsigned integers, reverts on overflow.\\r\\n     */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a);\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\\r\\n     * reverts when dividing by zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        require(b != 0);\\r\\n        return a % b;\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Standard ERC20 token\\r\\n *\\r\\n * @dev Implementation of the basic standard token.\\r\\n * https://eips.ethereum.org/EIPS/eip-20\\r\\n * Originally based on code by FirstBlood:\\r\\n * https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\r\\n *\\r\\n * This implementation emits additional Approval events, allowing applications to reconstruct the allowance status for\\r\\n * all accounts just by listening to said events. Note that this isn't required by the specification, and other\\r\\n * compliant implementations may not do it.\\r\\n */\\r\\ncontract ERC20 is IERC20 {\\r\\n    using SafeMath for uint256;\\r\\n\\r\\n    mapping(address => uint256) private _balances;\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) private _allowed;\\r\\n\\r\\n    uint256 private _totalSupply;\\r\\n\\r\\n    /**\\r\\n     * @dev Total number of tokens in existence\\r\\n     */\\r\\n    function totalSupply() public view returns (uint256) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Gets the balance of the specified address.\\r\\n     * @param owner The address to query the balance of.\\r\\n     * @return A uint256 representing the amount owned by the passed address.\\r\\n     */\\r\\n    function balanceOf(address owner) public view returns (uint256) {\\r\\n        return _balances[owner];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\\r\\n     * @param owner address The address which owns the funds.\\r\\n     * @param spender address The address which will spend the funds.\\r\\n     * @return A uint256 specifying the amount of tokens still available for the spender.\\r\\n     */\\r\\n    function allowance(address owner, address spender)\\r\\n        public\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        return _allowed[owner][spender];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfer token to a specified address\\r\\n     * @param to The address to transfer to.\\r\\n     * @param value The amount to be transferred.\\r\\n     */\\r\\n    function transfer(address to, uint256 value) public returns (bool) {\\r\\n        _transfer(msg.sender, to, value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\r\\n     * Beware that changing an allowance with this method brings the risk that someone may use both the old\\r\\n     * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\r\\n     * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\r\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n     * @param spender The address which will spend the funds.\\r\\n     * @param value The amount of tokens to be spent.\\r\\n     */\\r\\n    function approve(address spender, uint256 value) public returns (bool) {\\r\\n        _approve(msg.sender, spender, value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfer tokens from one address to another.\\r\\n     * Note that while this function emits an Approval event, this is not required as per the specification,\\r\\n     * and other compliant implementations may not emit the event.\\r\\n     * @param from address The address which you want to send tokens from\\r\\n     * @param to address The address which you want to transfer to\\r\\n     * @param value uint256 the amount of tokens to be transferred\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) public returns (bool) {\\r\\n        _transfer(from, to, value);\\r\\n        _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Increase the amount of tokens that an owner allowed to a spender.\\r\\n     * approve should be called when _allowed[msg.sender][spender] == 0. To increment\\r\\n     * allowed value is better to use this function to avoid 2 calls (and wait until\\r\\n     * the first transaction is mined)\\r\\n     * From MonolithDAO Token.sol\\r\\n     * Emits an Approval event.\\r\\n     * @param spender The address which will spend the funds.\\r\\n     * @param addedValue The amount of tokens to increase the allowance by.\\r\\n     */\\r\\n    function increaseAllowance(address spender, uint256 addedValue)\\r\\n        public\\r\\n        returns (bool)\\r\\n    {\\r\\n        _approve(\\r\\n            msg.sender,\\r\\n            spender,\\r\\n            _allowed[msg.sender][spender].add(addedValue)\\r\\n        );\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Decrease the amount of tokens that an owner allowed to a spender.\\r\\n     * approve should be called when _allowed[msg.sender][spender] == 0. To decrement\\r\\n     * allowed value is better to use this function to avoid 2 calls (and wait until\\r\\n     * the first transaction is mined)\\r\\n     * From MonolithDAO Token.sol\\r\\n     * Emits an Approval event.\\r\\n     * @param spender The address which will spend the funds.\\r\\n     * @param subtractedValue The amount of tokens to decrease the allowance by.\\r\\n     */\\r\\n    function decreaseAllowance(address spender, uint256 subtractedValue)\\r\\n        public\\r\\n        returns (bool)\\r\\n    {\\r\\n        _approve(\\r\\n            msg.sender,\\r\\n            spender,\\r\\n            _allowed[msg.sender][spender].sub(subtractedValue)\\r\\n        );\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfer token for a specified addresses\\r\\n     * @param from The address to transfer from.\\r\\n     * @param to The address to transfer to.\\r\\n     * @param value The amount to be transferred.\\r\\n     */\\r\\n    function _transfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) internal {\\r\\n        require(to != address(0));\\r\\n\\r\\n        _balances[from] = _balances[from].sub(value);\\r\\n        _balances[to] = _balances[to].add(value);\\r\\n        emit Transfer(from, to, value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Internal function that mints an amount of the token and assigns it to\\r\\n     * an account. This encapsulates the modification of balances such that the\\r\\n     * proper events are emitted.\\r\\n     * @param account The account that will receive the created tokens.\\r\\n     * @param value The amount that will be created.\\r\\n     */\\r\\n    function _mint(address account, uint256 value) internal {\\r\\n        require(account != address(0));\\r\\n\\r\\n        _totalSupply = _totalSupply.add(value);\\r\\n        _balances[account] = _balances[account].add(value);\\r\\n        emit Transfer(address(0), account, value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Internal function that burns an amount of the token of a given\\r\\n     * account.\\r\\n     * @param account The account whose tokens will be burnt.\\r\\n     * @param value The amount that will be burnt.\\r\\n     */\\r\\n    function _burn(address account, uint256 value) internal {\\r\\n        require(account != address(0));\\r\\n\\r\\n        _totalSupply = _totalSupply.sub(value);\\r\\n        _balances[account] = _balances[account].sub(value);\\r\\n        emit Transfer(account, address(0), value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Approve an address to spend another addresses' tokens.\\r\\n     * @param owner The address that owns the tokens.\\r\\n     * @param spender The address that will spend the tokens.\\r\\n     * @param value The number of tokens that can be spent.\\r\\n     */\\r\\n    function _approve(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 value\\r\\n    ) internal {\\r\\n        require(spender != address(0));\\r\\n        require(owner != address(0));\\r\\n\\r\\n        _allowed[owner][spender] = value;\\r\\n        emit Approval(owner, spender, value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Internal function that burns an amount of the token of a given\\r\\n     * account, deducting from the sender's allowance for said account. Uses the\\r\\n     * internal burn function.\\r\\n     * Emits an Approval event (reflecting the reduced allowance).\\r\\n     * @param account The account whose tokens will be burnt.\\r\\n     * @param value The amount that will be burnt.\\r\\n     */\\r\\n    function _burnFrom(address account, uint256 value) internal {\\r\\n        _burn(account, value);\\r\\n        _approve(account, msg.sender, _allowed[account][msg.sender].sub(value));\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract UpgradedStandardToken is ERC20 {\\r\\n    // those methods are called by the legacy contract\\r\\n    // and they must ensure msg.sender to be the contract address\\r\\n    uint256 public _totalSupply;\\r\\n\\r\\n    function transferByLegacy(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) public returns (bool);\\r\\n\\r\\n    function transferFromByLegacy(\\r\\n        address sender,\\r\\n        address from,\\r\\n        address spender,\\r\\n        uint256 value\\r\\n    ) public returns (bool);\\r\\n\\r\\n    function approveByLegacy(\\r\\n        address from,\\r\\n        address spender,\\r\\n        uint256 value\\r\\n    ) public returns (bool);\\r\\n\\r\\n    function increaseApprovalByLegacy(\\r\\n        address from,\\r\\n        address spender,\\r\\n        uint256 addedValue\\r\\n    ) public returns (bool);\\r\\n\\r\\n    function decreaseApprovalByLegacy(\\r\\n        address from,\\r\\n        address spender,\\r\\n        uint256 subtractedValue\\r\\n    ) public returns (bool);\\r\\n}\\r\\n\\r\\ncontract BlackList is Ownable {\\r\\n    /////// Getter to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\\r\\n    function getBlackListStatus(address _maker) external view returns (bool) {\\r\\n        return isBlackListed[_maker];\\r\\n    }\\r\\n\\r\\n    mapping(address => bool) public isBlackListed;\\r\\n\\r\\n    function addBlackList(address _evilUser) public onlyOwner {\\r\\n        isBlackListed[_evilUser] = true;\\r\\n        emit AddedBlackList(_evilUser);\\r\\n    }\\r\\n\\r\\n    function removeBlackList(address _clearedUser) public onlyOwner {\\r\\n        isBlackListed[_clearedUser] = false;\\r\\n        emit RemovedBlackList(_clearedUser);\\r\\n    }\\r\\n\\r\\n    event AddedBlackList(address indexed _user);\\r\\n\\r\\n    event RemovedBlackList(address indexed _user);\\r\\n}\\r\\n\\r\\ncontract StandardTokenWithFees is ERC20, Ownable {\\r\\n    // Additional variables for use if transaction fees ever became necessary\\r\\n    uint256 public basisPointsRate = 0;\\r\\n    uint256 public maximumFee = 0;\\r\\n    uint256 constant MAX_SETTABLE_BASIS_POINTS = 20;\\r\\n    uint256 constant MAX_SETTABLE_FEE = 50;\\r\\n\\r\\n    string public name;\\r\\n    string public symbol;\\r\\n    uint8 public decimals;\\r\\n\\r\\n    uint256 public constant MAX_UINT = 2**256 - 1;\\r\\n\\r\\n    function calcFee(uint256 _value) internal view returns (uint256) {\\r\\n        uint256 fee = (_value.mul(basisPointsRate)).div(10000);\\r\\n        if (fee > maximumFee) {\\r\\n            fee = maximumFee;\\r\\n        }\\r\\n        return fee;\\r\\n    }\\r\\n\\r\\n    function transfer(address _to, uint256 _value) public returns (bool) {\\r\\n        uint256 fee = calcFee(_value);\\r\\n        uint256 sendAmount = _value.sub(fee);\\r\\n\\r\\n        super.transfer(_to, sendAmount);\\r\\n        if (fee > 0) {\\r\\n            super.transfer(owner(), fee);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function transferFrom(\\r\\n        address _from,\\r\\n        address _to,\\r\\n        uint256 _value\\r\\n    ) public returns (bool) {\\r\\n        require(_to != address(0));\\r\\n        require(_value <= balanceOf(_from));\\r\\n        require(_value <= allowance(_from, msg.sender));\\r\\n\\r\\n        uint256 fee = calcFee(_value);\\r\\n        uint256 sendAmount = _value.sub(fee);\\r\\n\\r\\n        _transfer(_from, _to, sendAmount);\\r\\n        if (allowance(_from, msg.sender) < MAX_UINT) {\\r\\n            _approve(\\r\\n                _from,\\r\\n                msg.sender,\\r\\n                allowance(_from, msg.sender).sub(_value)\\r\\n            );\\r\\n        }\\r\\n        if (fee > 0) {\\r\\n            _transfer(_from, owner(), fee);\\r\\n        }\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function setParams(uint256 newBasisPoints, uint256 newMaxFee)\\r\\n        public\\r\\n        onlyOwner\\r\\n    {\\r\\n        // Ensure transparency by hardcoding limit beyond which fees can never be added\\r\\n        require(newBasisPoints < MAX_SETTABLE_BASIS_POINTS);\\r\\n        require(newMaxFee < MAX_SETTABLE_FEE);\\r\\n\\r\\n        basisPointsRate = newBasisPoints;\\r\\n        maximumFee = newMaxFee.mul(uint256(10)**decimals);\\r\\n\\r\\n        emit Params(basisPointsRate, maximumFee);\\r\\n    }\\r\\n\\r\\n    // Called if contract ever adds fees\\r\\n    event Params(uint256 feeBasisPoints, uint256 maxFee);\\r\\n}\\r\\n\\r\\ncontract TetherToken is Pausable, StandardTokenWithFees, BlackList {\\r\\n    address public upgradedAddress;\\r\\n    bool public deprecated;\\r\\n\\r\\n    //  The contract can be initialized with a number of tokens\\r\\n    //  All the tokens are deposited to the owner address\\r\\n    //\\r\\n    // @param _balance Initial supply of the contract\\r\\n    // @param _name Token Name\\r\\n    // @param _symbol Token symbol\\r\\n    // @param _decimals Token decimals\\r\\n    constructor(\\r\\n        uint256 _initialSupply,\\r\\n        string memory _name,\\r\\n        string memory _symbol,\\r\\n        uint8 _decimals\\r\\n    ) public {\\r\\n        _mint(owner(), _initialSupply);\\r\\n        name = _name;\\r\\n        symbol = _symbol;\\r\\n        decimals = _decimals;\\r\\n        deprecated = false;\\r\\n        emit Issue(_initialSupply);\\r\\n    }\\r\\n\\r\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\r\\n    function transfer(address _to, uint256 _value)\\r\\n        public\\r\\n        whenNotPaused\\r\\n        returns (bool)\\r\\n    {\\r\\n        require(!isBlackListed[msg.sender]);\\r\\n        if (deprecated) {\\r\\n            return\\r\\n                UpgradedStandardToken(upgradedAddress).transferByLegacy(\\r\\n                    msg.sender,\\r\\n                    _to,\\r\\n                    _value\\r\\n                );\\r\\n        } else {\\r\\n            return super.transfer(_to, _value);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\r\\n    function transferFrom(\\r\\n        address _from,\\r\\n        address _to,\\r\\n        uint256 _value\\r\\n    ) public whenNotPaused returns (bool) {\\r\\n        require(!isBlackListed[_from]);\\r\\n        if (deprecated) {\\r\\n            return\\r\\n                UpgradedStandardToken(upgradedAddress).transferFromByLegacy(\\r\\n                    msg.sender,\\r\\n                    _from,\\r\\n                    _to,\\r\\n                    _value\\r\\n                );\\r\\n        } else {\\r\\n            return super.transferFrom(_from, _to, _value);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\r\\n    function balanceOf(address who) public view returns (uint256) {\\r\\n        if (deprecated) {\\r\\n            return UpgradedStandardToken(upgradedAddress).balanceOf(who);\\r\\n        } else {\\r\\n            return super.balanceOf(who);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Allow checks of balance at time of deprecation\\r\\n    function oldBalanceOf(address who) public view returns (uint256) {\\r\\n        if (deprecated) {\\r\\n            return super.balanceOf(who);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\r\\n    function approve(address _spender, uint256 _value)\\r\\n        public\\r\\n        whenNotPaused\\r\\n        returns (bool)\\r\\n    {\\r\\n        if (deprecated) {\\r\\n            return\\r\\n                UpgradedStandardToken(upgradedAddress).approveByLegacy(\\r\\n                    msg.sender,\\r\\n                    _spender,\\r\\n                    _value\\r\\n                );\\r\\n        } else {\\r\\n            return super.approve(_spender, _value);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function increaseApproval(address _spender, uint256 _addedValue)\\r\\n        public\\r\\n        whenNotPaused\\r\\n        returns (bool)\\r\\n    {\\r\\n        if (deprecated) {\\r\\n            return\\r\\n                UpgradedStandardToken(upgradedAddress).increaseApprovalByLegacy(\\r\\n                    msg.sender,\\r\\n                    _spender,\\r\\n                    _addedValue\\r\\n                );\\r\\n        } else {\\r\\n            return super.increaseAllowance(_spender, _addedValue);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function decreaseApproval(address _spender, uint256 _subtractedValue)\\r\\n        public\\r\\n        whenNotPaused\\r\\n        returns (bool)\\r\\n    {\\r\\n        if (deprecated) {\\r\\n            return\\r\\n                UpgradedStandardToken(upgradedAddress).decreaseApprovalByLegacy(\\r\\n                    msg.sender,\\r\\n                    _spender,\\r\\n                    _subtractedValue\\r\\n                );\\r\\n        } else {\\r\\n            return super.decreaseAllowance(_spender, _subtractedValue);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\\r\\n    function allowance(address _owner, address _spender)\\r\\n        public\\r\\n        view\\r\\n        returns (uint256 remaining)\\r\\n    {\\r\\n        if (deprecated) {\\r\\n            return IERC20(upgradedAddress).allowance(_owner, _spender);\\r\\n        } else {\\r\\n            return super.allowance(_owner, _spender);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // deprecate current contract in favour of a new one\\r\\n    function deprecate(address _upgradedAddress) public onlyOwner {\\r\\n        require(_upgradedAddress != address(0));\\r\\n        deprecated = true;\\r\\n        upgradedAddress = _upgradedAddress;\\r\\n        emit Deprecate(_upgradedAddress);\\r\\n    }\\r\\n\\r\\n    // deprecate current contract if favour of a new one\\r\\n    function totalSupply() public view returns (uint256) {\\r\\n        if (deprecated) {\\r\\n            return IERC20(upgradedAddress).totalSupply();\\r\\n        } else {\\r\\n            return super.totalSupply();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Issue a new amount of tokens\\r\\n    // these tokens are deposited into the owner address\\r\\n    //\\r\\n    // @param _amount Number of tokens to be issued\\r\\n    function issue(uint256 amount) public onlyOwner {\\r\\n        require(!deprecated);\\r\\n        _mint(owner(), amount);\\r\\n        emit Issue(amount);\\r\\n    }\\r\\n\\r\\n    // Redeem tokens.\\r\\n    // These tokens are withdrawn from the owner address\\r\\n    // if the balance must be enough to cover the redeem\\r\\n    // or the call will fail.\\r\\n    // @param _amount Number of tokens to be issued\\r\\n    function redeem(uint256 amount) public onlyOwner {\\r\\n        require(!deprecated);\\r\\n        _burn(owner(), amount);\\r\\n        emit Redeem(amount);\\r\\n    }\\r\\n\\r\\n    function destroyBlackFunds(address _blackListedUser) public onlyOwner {\\r\\n        require(isBlackListed[_blackListedUser]);\\r\\n        uint256 dirtyFunds = balanceOf(_blackListedUser);\\r\\n        _burn(_blackListedUser, dirtyFunds);\\r\\n        emit DestroyedBlackFunds(_blackListedUser, dirtyFunds);\\r\\n    }\\r\\n\\r\\n    event DestroyedBlackFunds(\\r\\n        address indexed _blackListedUser,\\r\\n        uint256 _balance\\r\\n    );\\r\\n\\r\\n    // Called when new token are issued\\r\\n    event Issue(uint256 amount);\\r\\n\\r\\n    // Called when tokens are redeemed\\r\\n    event Redeem(uint256 amount);\\r\\n\\r\\n    // Called when contract is deprecated\\r\\n    event Deprecate(address newAddress);\\r\\n}\\r\\n\",\"keccak256\":\"0x5dc900efa5dd12234507307cb7bba270e143258d7f3524920df5e303b08b6ad0\"}},\"version\":1}",
  "bytecode": "0x6080604052600060065560006007553480156200001b57600080fd5b5060405162001fc338038062001fc3833981018060405260808110156200004157600080fd5b8151602083018051919392830192916401000000008111156200006357600080fd5b820160208101848111156200007757600080fd5b81516401000000008111828201871017156200009257600080fd5b50509291906020018051640100000000811115620000af57600080fd5b82016020810184811115620000c357600080fd5b8151640100000000811182820187101715620000de57600080fd5b50506020909101519092509050620000ff3364010000000062000205810204565b6001805460ff1916905560058054600160a060020a031916331790819055604051600160a060020a0391909116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36200017c6200016c64010000000062000257810204565b8564010000000062000267810204565b825162000191906008906020860190620003d5565b508151620001a7906009906020850190620003d5565b50600a805460ff191660ff8316179055600c805460a060020a60ff02191690556040805185815290517fcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a916020908290030190a15050505062000477565b6200022060008264010000000062001a916200032882021704565b604051600160a060020a038216907f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890600090a250565b600554600160a060020a03165b90565b600160a060020a03821615156200027d57600080fd5b6004546200029a9082640100000000620015256200038382021704565b600455600160a060020a038216600090815260026020526040902054620002d09082640100000000620015256200038382021704565b600160a060020a03831660008181526002602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600160a060020a03811615156200033e57600080fd5b6200035382826401000000006200039d810204565b156200035e57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b6000828201838110156200039657600080fd5b9392505050565b6000600160a060020a0382161515620003b557600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200041857805160ff191683800117855562000448565b8280016001018555821562000448579182015b82811115620004485782518255916020019190600101906200042b565b50620004569291506200045a565b5090565b6200026491905b8082111562000456576000815560010162000461565b611b3c80620004876000396000f3fe608060405234801561001057600080fd5b506004361061024f576000357c01000000000000000000000000000000000000000000000000000000009004806382dc1ec41161014d578063cc872b66116100d5578063e47d606011610099578063e47d60601461066e578063e4997dc514610694578063e5b5019a146106ba578063f2fde38b146106c2578063f3bdc228146106e85761024f565b8063cc872b66146105d2578063d73dd623146105ef578063db006a751461061b578063dd62ed3e14610638578063dd644f72146106665761024f565b806395d89b411161011c57806395d89b4114610529578063a457c2d714610531578063a9059cbb1461055d578063b7a3446c14610589578063c0324c77146105af5761024f565b806382dc1ec4146104eb5780638456cb59146105115780638da5cb5b146105195780638f32d59b146105215761024f565b806335390714116101db5780635c975abb1161019f5780635c975abb1461048157806366188463146104895780636ef8d66d146104b557806370a08231146104bd578063715018a6146104e35761024f565b806335390714146103f957806339509351146104015780633f4ba83a1461042d57806346fbf68e1461043557806359bf1abe1461045b5761024f565b80630ecb93c0116102225780630ecb93c01461034157806318160ddd1461036757806323b872dd1461038157806326976e3f146103b7578063313ce567146103db5761024f565b806306fdde03146102545780630753c30c146102d1578063095ea7b3146102f95780630e136b1914610339575b600080fd5b61025c61070e565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561029657818101518382015260200161027e565b50505050905090810190601f1680156102c35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102f7600480360360208110156102e757600080fd5b5035600160a060020a031661079c565b005b6103256004803603604081101561030f57600080fd5b50600160a060020a038135169060200135610845565b604080519115158252519081900360200190f35b610325610925565b6102f76004803603602081101561035757600080fd5b5035600160a060020a0316610935565b61036f610994565b60408051918252519081900360200190f35b6103256004803603606081101561039757600080fd5b50600160a060020a03813581169160208101359091169060400135610a54565b6103bf610b64565b60408051600160a060020a039092168252519081900360200190f35b6103e3610b73565b6040805160ff9092168252519081900360200190f35b61036f610b7c565b6103256004803603604081101561041757600080fd5b50600160a060020a038135169060200135610b82565b6102f7610bcc565b6103256004803603602081101561044b57600080fd5b5035600160a060020a0316610c30565b6103256004803603602081101561047157600080fd5b5035600160a060020a0316610c4a565b610325610c68565b6103256004803603604081101561049f57600080fd5b50600160a060020a038135169060200135610c71565b6102f7610d15565b61036f600480360360208110156104d357600080fd5b5035600160a060020a0316610d20565b6102f7610dde565b6102f76004803603602081101561050157600080fd5b5035600160a060020a0316610e48565b6102f7610e68565b6103bf610ecd565b610325610edc565b61025c610eed565b6103256004803603604081101561054757600080fd5b50600160a060020a038135169060200135610f48565b6103256004803603604081101561057357600080fd5b50600160a060020a038135169060200135610f84565b61036f6004803603602081101561059f57600080fd5b5035600160a060020a0316611045565b6102f7600480360360408110156105c557600080fd5b5080359060200135611063565b6102f7600480360360208110156105e857600080fd5b50356110f7565b6103256004803603604081101561060557600080fd5b50600160a060020a038135169060200135611168565b6102f76004803603602081101561063157600080fd5b503561120c565b61036f6004803603604081101561064e57600080fd5b50600160a060020a038135811691602001351661127d565b61036f61131e565b6103256004803603602081101561068457600080fd5b5035600160a060020a0316611324565b6102f7600480360360208110156106aa57600080fd5b5035600160a060020a0316611339565b61036f611395565b6102f7600480360360208110156106d857600080fd5b5035600160a060020a031661139b565b6102f7600480360360208110156106fe57600080fd5b5035600160a060020a03166113b7565b6008805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156107945780601f1061076957610100808354040283529160200191610794565b820191906000526020600020905b81548152906001019060200180831161077757829003601f168201915b505050505081565b6107a4610edc565b15156107af57600080fd5b600160a060020a03811615156107c457600080fd5b600c805460a060020a74ff0000000000000000000000000000000000000000199091161773ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03831690811790915560408051918252517fcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e916020908290030190a150565b60015460009060ff161561085857600080fd5b600c5460a060020a900460ff161561091257600c54604080517faee92d33000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a038681166024830152604482018690529151919092169163aee92d339160648083019260209291908290030181600087803b1580156108df57600080fd5b505af11580156108f3573d6000803e3d6000fd5b505050506040513d602081101561090957600080fd5b5051905061091f565b61091c838361144b565b90505b92915050565b600c5460a060020a900460ff1681565b61093d610edc565b151561094857600080fd5b600160a060020a0381166000818152600b6020526040808220805460ff19166001179055517f42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc9190a250565b600c5460009060a060020a900460ff1615610a4657600c60009054906101000a9004600160a060020a0316600160a060020a03166318160ddd6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015610a1357600080fd5b505afa158015610a27573d6000803e3d6000fd5b505050506040513d6020811015610a3d57600080fd5b50519050610a51565b610a4e611458565b90505b90565b60015460009060ff1615610a6757600080fd5b600160a060020a0384166000908152600b602052604090205460ff1615610a8d57600080fd5b600c5460a060020a900460ff1615610b4f57600c54604080517f8b477adb000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a03878116602483015286811660448301526064820186905291519190921691638b477adb9160848083019260209291908290030181600087803b158015610b1c57600080fd5b505af1158015610b30573d6000803e3d6000fd5b505050506040513d6020811015610b4657600080fd5b50519050610b5d565b610b5a84848461145e565b90505b9392505050565b600c54600160a060020a031681565b600a5460ff1681565b60075481565b336000818152600360209081526040808320600160a060020a03871684529091528120549091610bc3918590610bbe908663ffffffff61152516565b611537565b50600192915050565b610bd533610c30565b1515610be057600080fd5b60015460ff161515610bf157600080fd5b6001805460ff191690556040805133815290517f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa9181900360200190a1565b6000610c42818363ffffffff6115c316565b90505b919050565b600160a060020a03166000908152600b602052604090205460ff1690565b60015460ff1690565b60015460009060ff1615610c8457600080fd5b600c5460a060020a900460ff1615610d0b57600c54604080517f6001279f000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a0386811660248301526044820186905291519190921691636001279f9160648083019260209291908290030181600087803b1580156108df57600080fd5b61091c8383610f48565b610d1e336115fa565b565b600c5460009060a060020a900460ff1615610dce57600c54604080517f70a08231000000000000000000000000000000000000000000000000000000008152600160a060020a038581166004830152915191909216916370a08231916024808301926020929190829003018186803b158015610d9b57600080fd5b505afa158015610daf573d6000803e3d6000fd5b505050506040513d6020811015610dc557600080fd5b50519050610c45565b610dd782611642565b9050610c45565b610de6610edc565b1515610df157600080fd5b600554604051600091600160a060020a0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36005805473ffffffffffffffffffffffffffffffffffffffff19169055565b610e5133610c30565b1515610e5c57600080fd5b610e658161165d565b50565b610e7133610c30565b1515610e7c57600080fd5b60015460ff1615610e8c57600080fd5b6001805460ff1916811790556040805133815290517f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589181900360200190a1565b600554600160a060020a031690565b600554600160a060020a0316331490565b6009805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156107945780601f1061076957610100808354040283529160200191610794565b336000818152600360209081526040808320600160a060020a03871684529091528120549091610bc3918590610bbe908663ffffffff6116a516565b60015460009060ff1615610f9757600080fd5b336000908152600b602052604090205460ff1615610fb457600080fd5b600c5460a060020a900460ff161561103b57600c54604080517f6e18980a000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a0386811660248301526044820186905291519190921691636e18980a9160648083019260209291908290030181600087803b1580156108df57600080fd5b61091c83836116ba565b600c5460009060a060020a900460ff1615610c4557610dd782611642565b61106b610edc565b151561107657600080fd5b6014821061108357600080fd5b6032811061109057600080fd5b6006829055600a80546110af91839160ff16900a63ffffffff61170b16565b600781905560065460408051918252602082019290925281517fb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e929181900390910190a15050565b6110ff610edc565b151561110a57600080fd5b600c5460a060020a900460ff161561112157600080fd5b61113261112c610ecd565b82611736565b6040805182815290517fcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a9181900360200190a150565b60015460009060ff161561117b57600080fd5b600c5460a060020a900460ff161561120257600c54604080517fa9538157000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a038681166024830152604482018690529151919092169163a95381579160648083019260209291908290030181600087803b1580156108df57600080fd5b61091c8383610b82565b611214610edc565b151561121f57600080fd5b600c5460a060020a900460ff161561123657600080fd5b611247611241610ecd565b826117e2565b6040805182815290517f702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a449181900360200190a150565b600c5460009060a060020a900460ff161561131457600c54604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152600160a060020a03868116600483015285811660248301529151919092169163dd62ed3e916044808301926020929190829003018186803b15801561130057600080fd5b505afa1580156108f3573d6000803e3d6000fd5b61091c838361188d565b60065481565b600b6020526000908152604090205460ff1681565b611341610edc565b151561134c57600080fd5b600160a060020a0381166000818152600b6020526040808220805460ff19169055517fd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c9190a250565b60001981565b6113a3610edc565b15156113ae57600080fd5b610e65816118b8565b6113bf610edc565b15156113ca57600080fd5b600160a060020a0381166000908152600b602052604090205460ff1615156113f157600080fd5b60006113fc82610d20565b905061140882826117e2565b604080518281529051600160a060020a038416917f61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c6919081900360200190a25050565b6000610bc3338484611537565b60045490565b6000600160a060020a038316151561147557600080fd5b61147e84610d20565b82111561148a57600080fd5b611494843361127d565b8211156114a057600080fd5b60006114ab83611936565b905060006114bf848363ffffffff6116a516565b90506114cc868683611976565b6000196114d9873361127d565b10156114fe576114fe8633610bbe876114f28b3361127d565b9063ffffffff6116a516565b60008211156115195761151986611513610ecd565b84611976565b50600195945050505050565b60008282018381101561091c57600080fd5b600160a060020a038216151561154c57600080fd5b600160a060020a038316151561156157600080fd5b600160a060020a03808416600081815260036020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6000600160a060020a03821615156115da57600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b61160b60008263ffffffff611a4516565b604051600160a060020a038216907fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90600090a250565b600160a060020a031660009081526002602052604090205490565b61166e60008263ffffffff611a9116565b604051600160a060020a038216907f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890600090a250565b6000828211156116b457600080fd5b50900390565b6000806116c683611936565b905060006116da848363ffffffff6116a516565b90506116e68582611adf565b506000821115611703576117016116fb610ecd565b83611adf565b505b505092915050565b600082151561171c5750600061091f565b82820282848281151561172b57fe5b041461091c57600080fd5b600160a060020a038216151561174b57600080fd5b60045461175e908263ffffffff61152516565b600455600160a060020a03821660009081526002602052604090205461178a908263ffffffff61152516565b600160a060020a03831660008181526002602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600160a060020a03821615156117f757600080fd5b60045461180a908263ffffffff6116a516565b600455600160a060020a038216600090815260026020526040902054611836908263ffffffff6116a516565b600160a060020a0383166000818152600260209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b600160a060020a03918216600090815260036020908152604080832093909416825291909152205490565b600160a060020a03811615156118cd57600080fd5b600554604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36005805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000806119606127106119546006548661170b90919063ffffffff16565b9063ffffffff611aec16565b9050600754811115610c42575060075492915050565b600160a060020a038216151561198b57600080fd5b600160a060020a0383166000908152600260205260409020546119b4908263ffffffff6116a516565b600160a060020a0380851660009081526002602052604080822093909355908416815220546119e9908263ffffffff61152516565b600160a060020a0380841660008181526002602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600160a060020a0381161515611a5a57600080fd5b611a6482826115c3565b1515611a6f57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19169055565b600160a060020a0381161515611aa657600080fd5b611ab082826115c3565b15611aba57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b6000610bc3338484611976565b6000808211611afa57600080fd5b60008284811515611b0757fe5b0494935050505056fea165627a7a723058206bd1d338af1813cf1154f7f6031dc61c6959d82dc4a23f00144fd4077da3b2350029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061024f576000357c01000000000000000000000000000000000000000000000000000000009004806382dc1ec41161014d578063cc872b66116100d5578063e47d606011610099578063e47d60601461066e578063e4997dc514610694578063e5b5019a146106ba578063f2fde38b146106c2578063f3bdc228146106e85761024f565b8063cc872b66146105d2578063d73dd623146105ef578063db006a751461061b578063dd62ed3e14610638578063dd644f72146106665761024f565b806395d89b411161011c57806395d89b4114610529578063a457c2d714610531578063a9059cbb1461055d578063b7a3446c14610589578063c0324c77146105af5761024f565b806382dc1ec4146104eb5780638456cb59146105115780638da5cb5b146105195780638f32d59b146105215761024f565b806335390714116101db5780635c975abb1161019f5780635c975abb1461048157806366188463146104895780636ef8d66d146104b557806370a08231146104bd578063715018a6146104e35761024f565b806335390714146103f957806339509351146104015780633f4ba83a1461042d57806346fbf68e1461043557806359bf1abe1461045b5761024f565b80630ecb93c0116102225780630ecb93c01461034157806318160ddd1461036757806323b872dd1461038157806326976e3f146103b7578063313ce567146103db5761024f565b806306fdde03146102545780630753c30c146102d1578063095ea7b3146102f95780630e136b1914610339575b600080fd5b61025c61070e565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561029657818101518382015260200161027e565b50505050905090810190601f1680156102c35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102f7600480360360208110156102e757600080fd5b5035600160a060020a031661079c565b005b6103256004803603604081101561030f57600080fd5b50600160a060020a038135169060200135610845565b604080519115158252519081900360200190f35b610325610925565b6102f76004803603602081101561035757600080fd5b5035600160a060020a0316610935565b61036f610994565b60408051918252519081900360200190f35b6103256004803603606081101561039757600080fd5b50600160a060020a03813581169160208101359091169060400135610a54565b6103bf610b64565b60408051600160a060020a039092168252519081900360200190f35b6103e3610b73565b6040805160ff9092168252519081900360200190f35b61036f610b7c565b6103256004803603604081101561041757600080fd5b50600160a060020a038135169060200135610b82565b6102f7610bcc565b6103256004803603602081101561044b57600080fd5b5035600160a060020a0316610c30565b6103256004803603602081101561047157600080fd5b5035600160a060020a0316610c4a565b610325610c68565b6103256004803603604081101561049f57600080fd5b50600160a060020a038135169060200135610c71565b6102f7610d15565b61036f600480360360208110156104d357600080fd5b5035600160a060020a0316610d20565b6102f7610dde565b6102f76004803603602081101561050157600080fd5b5035600160a060020a0316610e48565b6102f7610e68565b6103bf610ecd565b610325610edc565b61025c610eed565b6103256004803603604081101561054757600080fd5b50600160a060020a038135169060200135610f48565b6103256004803603604081101561057357600080fd5b50600160a060020a038135169060200135610f84565b61036f6004803603602081101561059f57600080fd5b5035600160a060020a0316611045565b6102f7600480360360408110156105c557600080fd5b5080359060200135611063565b6102f7600480360360208110156105e857600080fd5b50356110f7565b6103256004803603604081101561060557600080fd5b50600160a060020a038135169060200135611168565b6102f76004803603602081101561063157600080fd5b503561120c565b61036f6004803603604081101561064e57600080fd5b50600160a060020a038135811691602001351661127d565b61036f61131e565b6103256004803603602081101561068457600080fd5b5035600160a060020a0316611324565b6102f7600480360360208110156106aa57600080fd5b5035600160a060020a0316611339565b61036f611395565b6102f7600480360360208110156106d857600080fd5b5035600160a060020a031661139b565b6102f7600480360360208110156106fe57600080fd5b5035600160a060020a03166113b7565b6008805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156107945780601f1061076957610100808354040283529160200191610794565b820191906000526020600020905b81548152906001019060200180831161077757829003601f168201915b505050505081565b6107a4610edc565b15156107af57600080fd5b600160a060020a03811615156107c457600080fd5b600c805460a060020a74ff0000000000000000000000000000000000000000199091161773ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03831690811790915560408051918252517fcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e916020908290030190a150565b60015460009060ff161561085857600080fd5b600c5460a060020a900460ff161561091257600c54604080517faee92d33000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a038681166024830152604482018690529151919092169163aee92d339160648083019260209291908290030181600087803b1580156108df57600080fd5b505af11580156108f3573d6000803e3d6000fd5b505050506040513d602081101561090957600080fd5b5051905061091f565b61091c838361144b565b90505b92915050565b600c5460a060020a900460ff1681565b61093d610edc565b151561094857600080fd5b600160a060020a0381166000818152600b6020526040808220805460ff19166001179055517f42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc9190a250565b600c5460009060a060020a900460ff1615610a4657600c60009054906101000a9004600160a060020a0316600160a060020a03166318160ddd6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015610a1357600080fd5b505afa158015610a27573d6000803e3d6000fd5b505050506040513d6020811015610a3d57600080fd5b50519050610a51565b610a4e611458565b90505b90565b60015460009060ff1615610a6757600080fd5b600160a060020a0384166000908152600b602052604090205460ff1615610a8d57600080fd5b600c5460a060020a900460ff1615610b4f57600c54604080517f8b477adb000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a03878116602483015286811660448301526064820186905291519190921691638b477adb9160848083019260209291908290030181600087803b158015610b1c57600080fd5b505af1158015610b30573d6000803e3d6000fd5b505050506040513d6020811015610b4657600080fd5b50519050610b5d565b610b5a84848461145e565b90505b9392505050565b600c54600160a060020a031681565b600a5460ff1681565b60075481565b336000818152600360209081526040808320600160a060020a03871684529091528120549091610bc3918590610bbe908663ffffffff61152516565b611537565b50600192915050565b610bd533610c30565b1515610be057600080fd5b60015460ff161515610bf157600080fd5b6001805460ff191690556040805133815290517f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa9181900360200190a1565b6000610c42818363ffffffff6115c316565b90505b919050565b600160a060020a03166000908152600b602052604090205460ff1690565b60015460ff1690565b60015460009060ff1615610c8457600080fd5b600c5460a060020a900460ff1615610d0b57600c54604080517f6001279f000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a0386811660248301526044820186905291519190921691636001279f9160648083019260209291908290030181600087803b1580156108df57600080fd5b61091c8383610f48565b610d1e336115fa565b565b600c5460009060a060020a900460ff1615610dce57600c54604080517f70a08231000000000000000000000000000000000000000000000000000000008152600160a060020a038581166004830152915191909216916370a08231916024808301926020929190829003018186803b158015610d9b57600080fd5b505afa158015610daf573d6000803e3d6000fd5b505050506040513d6020811015610dc557600080fd5b50519050610c45565b610dd782611642565b9050610c45565b610de6610edc565b1515610df157600080fd5b600554604051600091600160a060020a0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36005805473ffffffffffffffffffffffffffffffffffffffff19169055565b610e5133610c30565b1515610e5c57600080fd5b610e658161165d565b50565b610e7133610c30565b1515610e7c57600080fd5b60015460ff1615610e8c57600080fd5b6001805460ff1916811790556040805133815290517f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589181900360200190a1565b600554600160a060020a031690565b600554600160a060020a0316331490565b6009805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156107945780601f1061076957610100808354040283529160200191610794565b336000818152600360209081526040808320600160a060020a03871684529091528120549091610bc3918590610bbe908663ffffffff6116a516565b60015460009060ff1615610f9757600080fd5b336000908152600b602052604090205460ff1615610fb457600080fd5b600c5460a060020a900460ff161561103b57600c54604080517f6e18980a000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a0386811660248301526044820186905291519190921691636e18980a9160648083019260209291908290030181600087803b1580156108df57600080fd5b61091c83836116ba565b600c5460009060a060020a900460ff1615610c4557610dd782611642565b61106b610edc565b151561107657600080fd5b6014821061108357600080fd5b6032811061109057600080fd5b6006829055600a80546110af91839160ff16900a63ffffffff61170b16565b600781905560065460408051918252602082019290925281517fb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e929181900390910190a15050565b6110ff610edc565b151561110a57600080fd5b600c5460a060020a900460ff161561112157600080fd5b61113261112c610ecd565b82611736565b6040805182815290517fcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a9181900360200190a150565b60015460009060ff161561117b57600080fd5b600c5460a060020a900460ff161561120257600c54604080517fa9538157000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a038681166024830152604482018690529151919092169163a95381579160648083019260209291908290030181600087803b1580156108df57600080fd5b61091c8383610b82565b611214610edc565b151561121f57600080fd5b600c5460a060020a900460ff161561123657600080fd5b611247611241610ecd565b826117e2565b6040805182815290517f702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a449181900360200190a150565b600c5460009060a060020a900460ff161561131457600c54604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152600160a060020a03868116600483015285811660248301529151919092169163dd62ed3e916044808301926020929190829003018186803b15801561130057600080fd5b505afa1580156108f3573d6000803e3d6000fd5b61091c838361188d565b60065481565b600b6020526000908152604090205460ff1681565b611341610edc565b151561134c57600080fd5b600160a060020a0381166000818152600b6020526040808220805460ff19169055517fd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c9190a250565b60001981565b6113a3610edc565b15156113ae57600080fd5b610e65816118b8565b6113bf610edc565b15156113ca57600080fd5b600160a060020a0381166000908152600b602052604090205460ff1615156113f157600080fd5b60006113fc82610d20565b905061140882826117e2565b604080518281529051600160a060020a038416917f61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c6919081900360200190a25050565b6000610bc3338484611537565b60045490565b6000600160a060020a038316151561147557600080fd5b61147e84610d20565b82111561148a57600080fd5b611494843361127d565b8211156114a057600080fd5b60006114ab83611936565b905060006114bf848363ffffffff6116a516565b90506114cc868683611976565b6000196114d9873361127d565b10156114fe576114fe8633610bbe876114f28b3361127d565b9063ffffffff6116a516565b60008211156115195761151986611513610ecd565b84611976565b50600195945050505050565b60008282018381101561091c57600080fd5b600160a060020a038216151561154c57600080fd5b600160a060020a038316151561156157600080fd5b600160a060020a03808416600081815260036020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6000600160a060020a03821615156115da57600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b61160b60008263ffffffff611a4516565b604051600160a060020a038216907fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90600090a250565b600160a060020a031660009081526002602052604090205490565b61166e60008263ffffffff611a9116565b604051600160a060020a038216907f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890600090a250565b6000828211156116b457600080fd5b50900390565b6000806116c683611936565b905060006116da848363ffffffff6116a516565b90506116e68582611adf565b506000821115611703576117016116fb610ecd565b83611adf565b505b505092915050565b600082151561171c5750600061091f565b82820282848281151561172b57fe5b041461091c57600080fd5b600160a060020a038216151561174b57600080fd5b60045461175e908263ffffffff61152516565b600455600160a060020a03821660009081526002602052604090205461178a908263ffffffff61152516565b600160a060020a03831660008181526002602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600160a060020a03821615156117f757600080fd5b60045461180a908263ffffffff6116a516565b600455600160a060020a038216600090815260026020526040902054611836908263ffffffff6116a516565b600160a060020a0383166000818152600260209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b600160a060020a03918216600090815260036020908152604080832093909416825291909152205490565b600160a060020a03811615156118cd57600080fd5b600554604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36005805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000806119606127106119546006548661170b90919063ffffffff16565b9063ffffffff611aec16565b9050600754811115610c42575060075492915050565b600160a060020a038216151561198b57600080fd5b600160a060020a0383166000908152600260205260409020546119b4908263ffffffff6116a516565b600160a060020a0380851660009081526002602052604080822093909355908416815220546119e9908263ffffffff61152516565b600160a060020a0380841660008181526002602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600160a060020a0381161515611a5a57600080fd5b611a6482826115c3565b1515611a6f57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19169055565b600160a060020a0381161515611aa657600080fd5b611ab082826115c3565b15611aba57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b6000610bc3338484611976565b6000808211611afa57600080fd5b60008284811515611b0757fe5b0494935050505056fea165627a7a723058206bd1d338af1813cf1154f7f6031dc61c6959d82dc4a23f00144fd4077da3b2350029",
  "devdoc": {
    "methods": {
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender.\r approve should be called when _allowed[msg.sender][spender] == 0. To decrement\r allowed value is better to use this function to avoid 2 calls (and wait until\r the first transaction is mined)\r From MonolithDAO Token.sol\r Emits an Approval event.\r",
        "params": {
          "spender": "The address which will spend the funds.\r",
          "subtractedValue": "The amount of tokens to decrease the allowance by.\r"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender.\r approve should be called when _allowed[msg.sender][spender] == 0. To increment\r allowed value is better to use this function to avoid 2 calls (and wait until\r the first transaction is mined)\r From MonolithDAO Token.sol\r Emits an Approval event.\r",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.\r",
          "spender": "The address which will spend the funds.\r"
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract.\r"
      },
      "owner()": {
        "return": "the address of the owner.\r"
      },
      "pause()": {
        "details": "called by the owner to pause, triggers stopped state\r"
      },
      "paused()": {
        "return": "true if the contract is paused, false otherwise.\r"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract.\r It will not be possible to call the functions with the `onlyOwner`\r modifier anymore.\r"
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
        "params": {
          "newOwner": "The address to transfer ownership to.\r"
        }
      },
      "unpause()": {
        "details": "called by the owner to unpause, returns to normal state\r"
      }
    }
  },
  "userdoc": {
    "methods": {
      "getBlackListStatus(address)": {
        "notice": "//// Getter to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////"
      },
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner,\r thereby removing any functionality that is only available to the owner.\r"
      }
    }
  }
}